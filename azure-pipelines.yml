# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
# Azure DevOps Pipeline for Python with Code Coverage and Artifacts

trigger:
  - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  VENV_DIR: 'venv'

stages:
  - stage: BuildAndTest
    jobs:
      - job: BuildAndTestJob
        steps:
          - checkout: self

          - task: UsePythonVersion@0
            inputs:
              versionSpec: '3.x'
              addToPath: true

          - script: |
              echo "MY_VAR is: $(MY_VAR)"
              python -m venv $(VENV_DIR)
              ./$(VENV_DIR)/bin/pip install --upgrade pip
              ./$(VENV_DIR)/bin/pip install -r requirements.txt
              ./$(VENV_DIR)/bin/pip install pytest pytest-cov coverage
              ./$(VENV_DIR)/bin/python -m pytest --cov=. \
                --cov-report=xml:$(Build.SourcesDirectory)/coverage.xml \
                --cov-report=html:$(Build.SourcesDirectory)/htmlcov \
                -v
            displayName: 'Set up venv, install deps, run tests with coverage'  # This is correct placement

          - task: PublishCodeCoverageResults@1
            inputs:
              codeCoverageTool: 'Cobertura'
              summaryFileLocation: '$(Build.SourcesDirectory)/coverage.xml'
              reportDirectory: '$(Build.SourcesDirectory)/htmlcov'
            displayName: 'Publish Code Coverage Results'

          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: '$(Build.SourcesDirectory)/htmlcov'
              ArtifactName: 'coverage-report'
              publishLocation: 'Container'
            displayName: 'Publish HTML Coverage Report Artifact'

  - stage: RunApp
    dependsOn: BuildAndTest
    jobs:
      - job: RunAppJob
        steps:
          - checkout: self

          - task: UsePythonVersion@0
            inputs:
              versionSpec: '3.x'
              addToPath: true

          - script: |
              echo "MY_VAR is: $(MY_VAR)"
              python -m venv $(VENV_DIR)
              ./$(VENV_DIR)/bin/pip install -r requirements.txt
              ./$(VENV_DIR)/bin/python hello_world.py
            displayName: 'Run hello_world.py'
